# Will get many reports (The number of report = The number of Testing Jobs)
name: Run Cypress E2E Tests

on:
  workflow_dispatch:
    inputs:
      username:
        description: "Username for login"
        required: true
      password:
        description: "Password for login"
        required: true
      baseUrl:
        description: "Base URL"
        required: true
        default: "https://opensource-demo.orangehrmlive.com"

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci

      - name: Generate matrix.json
        run: node .github/workflows/generate-feature-matrix.js

      - id: set-matrix
        run: echo "matrix=$(cat matrix.json | jq -c .)" >> $GITHUB_OUTPUT

  test:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci

      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jre
          curl -o allure.zip -L https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.zip
          unzip -q allure.zip -d allure-cli
          sudo mv allure-cli/allure-2.27.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Extract artifact name
        run: |
          ARTIFACT_NAME=$(basename "${{ matrix.spec_file }}" .feature)
          ARTIFACT_NAME_SAFE=$(echo "$ARTIFACT_NAME" | tr '/' '-' | tr ' ' '-')
          echo "artifact_name=$ARTIFACT_NAME_SAFE" >> $GITHUB_ENV

      # ðŸ”½ Táº£i láº¡i history tá»« artifact trÆ°á»›c (náº¿u cÃ³)
      - name: Download previous history (optional)
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: allure-history-${{ env.artifact_name }}
          path: allure-history

      - name: Copy history into allure-results (if exists)
        run: |
          mkdir -p allure-results/history
          cp -r allure-history/history/* allure-results/history/ || true

      # ðŸ”¥ Cháº¡y Cypress
      - name: Run Cypress
        env:
          CYPRESS_username: ${{ github.event.inputs.username }}
          CYPRESS_password: ${{ github.event.inputs.password }}
          CYPRESS_baseUrl: ${{ github.event.inputs.baseUrl }}
        run: |
          npx cypress run \
            --spec "${{ matrix.spec_file }}" \
            --env username=${{ github.event.inputs.username }},password=${{ github.event.inputs.password }}

      # ðŸ§¾ Táº¡o bÃ¡o cÃ¡o Allure
      - name: Generate Allure Report
        run: |
          allure generate allure-results --clean -o allure-report

      # ðŸ“¤ Upload Allure Report
      - name: Upload Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report-${{ env.artifact_name }}
          path: allure-report

      # ðŸ“¦ LÆ°u láº¡i history Ä‘á»ƒ dÃ¹ng á»Ÿ láº§n káº¿ tiáº¿p
      - name: Upload Allure History for trend
        uses: actions/upload-artifact@v4
        with:
          name: allure-history-${{ env.artifact_name }}
          path: allure-report/history


# Just get a final-report
# jobs:
#   run-tests:
#     strategy:
#       matrix:
#         spec_file:
#           - cypress/e2e/features/LoginPage.feature
#           - cypress/e2e/features/AdminPage.feature
#           - cypress/e2e/features/SettingsPage.feature
#     runs-on: ubuntu-latest
#     steps:
#       # checkout + cÃ i Cypress + cÃ i allure nhÆ° cÅ©
#       - name: Run Cypress tests
#         run: |
#           npx cypress run --spec "${{ matrix.spec_file }}"
#       - name: Save Allure results
#         uses: actions/upload-artifact@v4
#         with:
#           name: allure-results-${{ matrix.spec_file }}
#           path: allure-results

#   merge-report:
#     needs: run-tests
#     runs-on: ubuntu-latest
#     steps:
#       - name: Download Allure results
#         uses: actions/download-artifact@v4
#         with:
#           path: merged-allure-results

#       - name: Merge Allure results
#         run: |
#           mkdir final-results
#           find merged-allure-results -type f -name '*.json' -exec cp {} final-results/ \;

#       - name: Generate Allure Report
#         run: |
#           npx allure generate final-results --clean -o final-report

#       - name: Upload Merged Report
#         uses: actions/upload-artifact@v4
#         with:
#           name: final-allure-report
#           path: final-report
